# Elimina headers de CORS duplicados del backend
proxy_hide_header Access-Control-Allow-Origin;
proxy_hide_header Access-Control-Allow-Methods;
proxy_hide_header Access-Control-Allow-Headers;
proxy_hide_header Access-Control-Allow-Credentials;

# Configuración de CORS
set $cors_origin "";
set $cors_credentials "";

# Permitir orígenes específicos
if ($http_origin ~* ^(http://localhost:5173|https://isolytics.vercel.app)$) {
    set $cors_origin $http_origin;
    set $cors_credentials "true";
}

# Manejar requests OPTIONS (preflight)
if ($request_method = OPTIONS) {
    add_header Access-Control-Allow-Origin "$cors_origin" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, Origin, X-Requested-With" always;
    add_header Access-Control-Allow-Credentials "$cors_credentials" always;
    add_header Access-Control-Max-Age 1728000 always;
    add_header Content-Length 0 always;
    add_header Content-Type text/plain always;
    return 204;
}

# Añadir headers CORS a todas las respuestas
add_header Access-Control-Allow-Origin "$cors_origin" always;
add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, Origin, X-Requested-With" always;
add_header Access-Control-Allow-Credentials "$cors_credentials" always;